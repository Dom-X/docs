{"./":{"url":"./","title":"Kurenai Network","keywords":"","body":"1.1.1. 待更新/完善1.1.1. 待更新/完善 © 2021 Kurenai Network, lnc. all right reserved，powered by Gitbook本教程发布时间： 2021-12-19 20:09:27 window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"如何在 Clash for Windows上配置服务.html":{"url":"如何在 Clash for Windows上配置服务.html","title":"如何在 Clash for Windows上配置服务","keywords":"","body":"1.2.1. 1. 获取应用1.2.2. 2. 快速导入1.2.2.1.1. 3. 软件简介1.2.3. 4. 开始连接1.2.4. 5. 开启分流/更新订阅1.2.1. 1. 获取应用 教程仅限于已购买订阅用户使用 Clash for Windows软件版权及后续权益属于软件作者，软件相关介绍及说明可参考作者主页：https://github.com/Fndroid/clash_for_windows_pkg Clash for Windows 最新版本同时支持Windows和Mac平台，请确保您已安装最新版的Clash for Windows 安装时请选择 “为使用这台电脑的任何人安装”；运行时请右键，以管理员身份运行 网盘下载1 网盘下载2 github下载 1.2.2. 2. 快速导入 此处我们将指导您使用 「 一键导入 」 方式完成配置。 点击下方 导入CLASH 即可 点击导入到 Clash 1.2.2.1.1. 3. 软件简介 这里介绍常规使用到的 General - 系统配置及开关页面 Proxies - 节点线路 Profiles - 订阅管理 1.2.3. 4. 开始连接 返回到初始界面 General，并且打开系统连接！ Sytem Proxy 即为代理开关 如果Sytem Proxy开关已经打开，此时已经可以使用本站提供的服务了 建议打开Start with Windows，这样开机就自动启动了 1.2.4. 5. 开启分流/更新订阅 开启分流： 电脑右下角 找到clash图标(一个小猫咪)，鼠标右键依次选择 > Proxy Mode > Rule 更新订阅：如下图，建议定期更新订阅以获取节点的最新信息 © 2021 Kurenai Network, lnc. all right reserved，powered by Gitbook本教程发布时间： 2021-12-18 23:56:14 window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"如何在 Clash for Linux上配置服务.html":{"url":"如何在 Clash for Linux上配置服务.html","title":"如何在 Clash for Linux上配置服务","keywords":"","body":"1.3.1. 1. 概述1.3.2. 2. 下载并安装 Clash for Linux1.3.3. 3. 配置1.3.4. 4. 设置分流1.3.1. 1. 概述 Clash 是一个基于Go语言开发的跨平台代理程序。 Clash For Linux 是基于 Electron 和 Clash 开发的 Linux 代理程序，可以让用户通过 GUI 直观的对 Clash 进行配置。 1.3.2. 2. 下载并安装 Clash for Linux 网盘下载1 网盘下载2 github下载 1.3.3. 3. 配置 创建你想要的存放文件的目录，解压gz包，我存放的路径是/root/clash，可以将解压文件重命名为clash便于阅读 unzip /clash-linux-amd64-v0.18.0.gz 赋予文件执行权限 chmod +x clash 启动文件 ./clash 第一次启动会在用户目录下自动生成Config.yaml 和Country.mmdb两个文件。 生成的Config.yaml文件为空，需要后续填写自己的代理信息。 我这里生成的目录是/root/.config/clash，如果不一致的话可以使用find命令查找一下 添加 Clash 配置订阅 到官网订阅中心选择复制订阅，然后在浏览器中访问【 订阅地址后面加&flag=clash 】 ，然后右击浏览器页面，选择“另存为”保存页面 然后给保存的文件修改为Config.yaml （格式也要修改） 然后我们编辑下文件内容 首先把port: 7890这一行前面的全删掉 然后把&lt;/body&gt;&lt;/html&gt;这一行删掉 修改完成以后保存 替换掉刚才解压出的空的Config.yaml文件 启动clash 配置完成后重新执行命令启动clash，以加载修改的配置文件 打开下面的网址访问管理页面 http://clash.razord.top/#/proxies 设置虚拟机网络，配置代理 以 centos7.4 为例，打开系统设置，选择网络，点击网络代理，选择手动，按照yml配置文件中设置的端口进行配置，填写 HTTP 和 HTTPS 代理为 127.0.0.1:7890，填写 Socks 主机为 127.0.0.1:7891，即可启用系统代理 1.3.4. 4. 设置分流 点击窗口左侧的 Proxies (代理) 默认情况下，Clash 使用 Rule (规则) 模式。不推荐选择 Global (全局) 与 Direct (直连) 模式。 Clash 支持通过策略组，对不同的网站使用不同的策略。合理使用分流可以提升您的使用体验。 Proxy 决策使用的线路，可在此处切换节点。 Domestic 决策所有中国大陆的网站，默认 DIRECT 为直连。 Global 决策在中国大陆无法访问的主流网站，默认 Proxy 为使用代理。 Others 决策不包含在 Global 规则内的冷门网站，默认 Proxy 为使用代理。 祝您使用愉快！ © 2021 Kurenai Network, lnc. all right reserved，powered by Gitbook本教程发布时间： 2021-12-19 00:22:52 window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"如何在 Clash for Android 上配置服务.html":{"url":"如何在 Clash for Android 上配置服务.html","title":"如何在 Clash for Android 上配置服务","keywords":"","body":"1.4.1. 1. 获取应用1.4.2. 2. 快速导入1.4.3. 3. 启动 Clash For Android 连接1.4.1. 1. 获取应用 教程仅限于已购买订阅用户使用 软件版权及后续权益属于软件作者。 最新版本同时支持 SS/V2ray 协议，请确保您已安装最新版的Clash For Android。 网盘下载1 网盘下载2 github下载 1.4.2. 2. 快速导入 此处我们将指导您使用 「 一键导入 」 方式完成配置。 点击下方 导入 Clash For Android 即可 点击导入到 Clash For Android 1.4.3. 3. 启动 Clash For Android 连接 点击上方的一键导入。 点击快速导入会跳转到 Clash For Android，把自动更新设置为1400分钟，并保存配置文件。（图1） 打开软件主界面，把配置勾选后返回主界面。 （图2） 开启连接，点击启动，如果是第一次使用会提示你开启VPN连接，点击确定即可。（图3） 检查手机状态栏右上角，是否有一个 VPN(钥匙) 图标！（图4） © 2021 Kurenai Network, lnc. all right reserved，powered by Gitbook本教程发布时间： 2021-12-19 00:07:43 window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"如何在 ClashX 上配置服务.html":{"url":"如何在 ClashX 上配置服务.html","title":"如何在 ClashX 上配置服务","keywords":"","body":"1.5.1. 1. 获取应用1.5.2. 2. 快速导入1.5.3. 3. 软件简介1.5.4. 4. 开始连接1.5.1. 1. 获取应用 教程仅限于已购买订阅用户使用 ClashX软件版权及后续权益属于软件作者，软件相关介绍及说明可参考作者主页：https://github.com/yichengchen/clashX 最新版本同时支持Windows和Mac平台，请确保您已安装最新版的ClashX。 打开 ClashX，此时会提示您需要安装一个小工具，点击安装随后输入 macOS 账户密码即可。 网盘下载1 网盘下载2 github下载 1.5.2. 2. 快速导入 此处我们将指导您使用 「 一键导入 」 方式完成配置。 点击下方 导入CLASH 即可 点击导入到 Clash 1.5.3. 3. 软件简介 这里介绍常规使用到的 ClashX 的默认出站模式为 “规则判断”，不推荐选择 “全局连接” 与 “直连连接”。 ClashX 支持通过策略组，对不同的网站使用不同的策略。合理使用分流可以提升您的使用体验。 代理（Proxy） 决策默认使用的线路，可在此处切换节点。 其他的决策特定情况下的代理使用情况。 选 代理 表示使用默认的线路连接。 选 DIRECT 表示不使用代理连接。 选 REJECT 表示拒绝连接（去广告用）。 1.5.4. 4. 开始连接 打开软件界面 设置为系统代理 即为代理开关 如果 设置为系统代理 开关已经打开，此时已经可以使用本站提供的服务了 建议打开 开机启动 © 2021 Kurenai Network, lnc. all right reserved，powered by Gitbook本教程发布时间： 2021-12-19 00:07:38 window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"如何在 Shadowrocket 上配置服务 - 推荐.html":{"url":"如何在 Shadowrocket 上配置服务 - 推荐.html","title":"如何在 Shadowrocket 上配置服务 - 推荐","keywords":"","body":"1.6.1. 1. 概述1.6.2. 2. 购买Shadowrocket1.6.3. 3. 一键订阅1.6.4. 4. 启动Shadowrocket1.6.5. 5. 设置自动更新1.6.1. 1. 概述 Shadowrocket（ 请注意应用名称，App Store非常多盗版，俗称“ 小火箭 ” ） 完整支持本站订阅服务。 由于境内地区 App Store 禁止代理应用因此已被下架，当前需要在访问境外 App Store 获取 因此需要境外 Apple ID 方可获取下载，应用售价 $2.99 （请注意，该费用收取方为应用程式开发者）。 1.6.2. 2. 购买Shadowrocket 注册外区账号 App Store搜索 Shadowrocket 购买下载 1.6.3. 3. 一键订阅 请在要使用的设备的 safari 浏览器中打开本页面，否则一键按钮不生效！！！ 此处我们将指导您使用 「 一键导入 」 方式完成配置。 点击下方 导入Shadowrocket 即可 点击导入到 Shadowrocket 1.6.4. 4. 启动Shadowrocket 首页选择一个我们的接入点，然后点击顶部的开关。 如果是第一次使用，则会提示需要添加 VPN 连接配置。点击 允许 后按系统提示操作，验证密码或 Touch ID。 之后会自动返回到 shadowrocket 界面，此时已完成启用。 1.6.5. 5. 设置自动更新 设置里往下滑动，打开 「 订阅 」 勾选「 打开时更新 」和 「 自动后台更新 」 这样以后节点更新就会及时推送到设备上了 © 2021 Kurenai Network, lnc. all right reserved，powered by Gitbook本教程发布时间： 2021-12-19 00:15:02 window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"如何在 Quantumult X 上配置服务.html":{"url":"如何在 Quantumult X 上配置服务.html","title":"如何在 Quantumult X 上配置服务","keywords":"","body":"1.7.1. 1. 概述1.7.2. 2. 自行购买 Quantumult X1.7.3. 3. 一键订阅1.7.4. 3. 启动 Quantumult X1.7.1. 1. 概述 QuantumultX（ 请注意应用名称，俗称“ 圈 ” ），完整支持本站订阅服务。 由于境内地区 App Store 禁止代理应用因此已被下架，当前需要在访问境外 App Store获取 因此需要境外 Apple ID 方可获取下载，应用售价 $4.99 （请注意，该费用收取方为应用程式开发者）。 1.7.2. 2. 自行购买 Quantumult X 注意：Quantumult X 已经开启设备验证，需要自行购买APP。 直达Quantumult X购买下载页面：https://apps.apple.com/us/app/quantumult-x/id1443988620 1.7.3. 3. 一键订阅 此处我们将指导您使用 「 一键导入 」 方式完成配置。 点击下方 导入Quantumult X 即可 点击导入到 QuantumultX 1.7.4. 3. 启动 Quantumult X 注意：各种提示全程允许即可！ 点击了上方的一键订阅会提示使用 Quantumult X 打开。 QuantumultX 会提示更新配置文件 点击连接，如果是第一次使用，则会提示需要添加 VPN 连接配置。点击 允许 后按系统提示操作，验证密码或 Touch ID。 之后会自动返回到 QuantumultX 界面，此时已完成启用。 © 2021 Kurenai Network, lnc. all right reserved，powered by Gitbook本教程发布时间： 2021-12-19 00:17:25 window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"如何在 MerlinClash 上为 梅林路由器 配置服务.html":{"url":"如何在 MerlinClash 上为 梅林路由器 配置服务.html","title":"如何在 MerlinClash 上为 梅林路由器 配置服务","keywords":"","body":"1.8.1. 1. 前提1.8.2. 2. 获取应用1.8.3. 3. 解除限制1.8.4. 4. 配置订阅1.8.5. 5. 开启代理1.8.1. 1. 前提 MerlinClash 至少运行在官改固件上，请您首先点开路由器管理界面 查看固件版本，如果是官方版本，请您下载官改固件并刷机 点我打开koolshare论坛下载官改固件 本教程依靠华硕GT-AC5300为例编写，其他路由器可参照本教程适当调整 1.8.2. 2. 获取应用 注意：请根据您的路由器型号选择下载，建议关注Telegram频道以获取最新版本 将下载的文件重命名为 merlinclash.tar.gz (全小写) 然后回到路由器界面，进入软件中心 - 离线安装，选择文件并选择刚才的 merlinclash.tar.gz 文件 点上传并安装，稍等片刻就安装好了 网盘下载1 Telegram频道下载 1.8.3. 3. 解除限制 注意：koolshare等可能提示插件非法无法安装，就需要操作这步，如果没提示直接跳过即可 在软件中心安装 shellinabox（直接从未安装列表点击可直接安装） 打开 shellinabox 并输入路由器登陆用户名和密码进行登陆 复制以下代码 右击粘贴到shellinabox界面 然后按回车运行 sed -i 's/\\tdetect_package/\\t# detect_package/g' /koolshare/scripts/ks_tar_install.sh 1.8.4. 4. 配置订阅 到官网订阅中心选择复制订阅，然后回到路由器里打开刚安装好的插件 粘贴复制到的订阅到 SubConverter本地转换 中，然后点 开始转换 之后会自动进行配置，最后返回到界面，此时已完成启用。 1.8.5. 5. 开启代理 如果没自动启用，就打开插件的 首页功能 ，配置文件选择刚才生成的这个文件 然后划到最底下点 保存&应用，然后打开 Merlin Clash开关 稍等片刻就可以看到上面的插件运行状态一片绿色就是可以了 如果要设置分流可以点下面两个按钮打开图形界面设置 © 2021 Kurenai Network, lnc. all right reserved，powered by Gitbook本教程发布时间： 2021-12-19 00:19:40 window.klipse_settings = { selector: \".language-klipse, .lang-eval-clojure\", selector_eval_js: \".lang-eval-js\", selector_eval_python_client: \".lang-eval-python\", selector_eval_php: \".lang-eval-php\", selector_eval_scheme: \".lang-eval-scheme\", selector_eval_ruby: \".lang-eval-ruby\", selector_reagent: \".lang-reagent\", selector_google_charts: \".lang-google-chart\", selector_es2017: \".lang-eval-es2017\", selector_jsx: \".lang-eval-jsx\", selector_transpile_jsx: \".lang-transpile-jsx\", selector_render_jsx: \".lang-render-jsx\", selector_react: \".lang-react\", selector_eval_markdown: \".lang-render-markdown\", selector_eval_lambdaway: \".lang-render-lambdaway\", selector_eval_cpp: \".lang-eval-cpp\", selector_eval_html: \".lang-render-html\", selector_sql: \".lang-eval-sql\", selector_brainfuck: \"lang-eval-brainfuck\", selector_js: \".lang-transpile-cljs\" }; console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"}}